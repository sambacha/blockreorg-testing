substitutions:
  _TEST0_ID: "f4f144a3-2d90-4ae2-abce-7c9750dff54e"
  _TEST0_STATS: '{"difficulty":{"max":51164595,"standardDeviation":288899.98642218736,"mean":50575699.79856117},"totalDifficulty":{"max":21599501362,"standardDeviation":6082475809.04263,"mean":11052214364.441248},"gasLimit":{"max":5900000,"standardDeviation":0,"mean":5900000},"gasUsed":{"max":5458080,"standardDeviation":1096.6685175366063,"mean":5455157.486810554},"blockTime":{"max":64,"standardDeviation":11.646120096597143,"mean":11.901442307692312},"blockSize":{"max":78618,"standardDeviation":0.8880805346521314,"mean":78616.98321342922},"transactionPerBlock":{"max":12,"standardDeviation":0,"mean":12},"uncleCount":{"max":0,"standardDeviation":0,"mean":0},"tps":{"max":12,"standardDeviation":3.611591306765362,"mean":2.973311070963738},"blocks":417}'
  _TEST0_DATE: "2020-08-30"
  _TEST1_ID: "48e4dfaf-8b85-44b4-b143-05349a613ae6"
  _TEST1_STATS: '{"difficulty":{"max":50813909,"standardDeviation":264671.6497562906,"mean":50299392.32227485},"totalDifficulty":{"max":21734532107,"standardDeviation":6136962143.886449,"mean":11136248185.677725},"gasLimit":{"max":5900000,"standardDeviation":0,"mean":5900000},"gasUsed":{"max":5458336,"standardDeviation":1091.854540903601,"mean":5455211.374407583},"blockTime":{"max":95,"standardDeviation":13.606378700314513,"mean":12.491686460807603},"blockSize":{"max":79157,"standardDeviation":36.968398010022064,"mean":78619.66824644545},"transactionPerBlock":{"max":12,"standardDeviation":0,"mean":12},"uncleCount":{"max":1,"standardDeviation":0.06867951064544757,"mean":0.004739336492890993},"tps":{"max":12,"standardDeviation":3.873169622237822,"mean":3.1944375461309704},"blocks":422}'
  _TEST1_DATE: "2020-08-30"
  _ACCOUNT_PASSWORD: "password"
  _ETH_NETWORK_ID: "7777"
  _ACCOUNTS_TO_CREATE: "90"  # should be same as num. nodes
  _BA_PARAMETER: "10"
  _GAS_LIMIT:  5900000
  _GAS_TARGET: 5500000
  _TPS: 4  # per node, pick sufficiently high rate for saturation 
  _TX_SIZE: 6400
  _CONCURRENT_NONCES: 75    # don't set too high to ensure steady tx saturation (must be less than Geth's `--txpool.accountslots`).
services:
  - name: geth
    image: "ethereum/client-go:alltools-v1.9.18"
#    image: "gcr.io/whiteblock/geth-wb/geth:v1.9.18"
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: >
        mkdir -p /geth/keystore;
        cp /accounts/keystore/* /geth/keystore;
        cp /accounts/static-nodes${INDEX}.json /geth/static-nodes.json;
        echo $_ACCOUNT_PASSWORD > /geth/pw.txt;
        geth --nousb --datadir /geth/ init /accounts/genesis.json;
        geth --networkid $_ETH_NETWORK_ID
        --datadir /geth/
        --http
        --http.addr 0.0.0.0
        --miner.gasprice=${MINER_GASPRICE}
        --miner.gaslimit=$_GAS_LIMIT
        --miner.gastarget=$_GAS_TARGET
        --http.api "admin,web3,eth,net,personal,miner,txpool"
        --http.corsdomain "0.0.0.0"
        --txpool.nolocals
        --http.vhosts=*
        --verbosity=3
        --port 30303
        --nousb
        --miner.etherbase $(cat /accounts/address${INDEX})
        --unlock $(cat /accounts/address${INDEX})
        --allow-insecure-unlock
        --password /geth/pw.txt
        --mine
        --miner.threads=${MINER_THREADS}
        --nodekeyhex $(cat /accounts/priv$INDEX)
        --nodiscover
        --txpool.accountslots 5000
    environment:
      MINER_GASPRICE: "1"
      MINER_THREADS: "1"
    resources:
      cpus: 2
      memory: 6 GB
      storage: 40 GiB
  
  - name: record
    image: gcr.io/whiteblock/helpers/ethereum/record:master
    script:
      inline: 
        app --target http://$GETH_SERVICE0_COMMON_NETWORK:8545 --start-block 10
    resources:
      memory: 1 GiB

  - name: block-logger
    image: gcr.io/whiteblock/helpers/ethereum/block-logger:master
    script:
      inline: 
        app --target http://$GETH_SERVICE0_COMMON_NETWORK:8545 --delay 10
    resources:
      memory: 1 GiB

  - name: tps-logger
    image: gcr.io/whiteblock/helpers/ethereum/tps-logger:master
    script:
      inline: tps-logger --node $GETH_SERVICE0_COMMON_NETWORK:8545 --record $RECORD_SERVICE0_COMMON_NETWORK:8080 --listen 0.0.0.0:17777
    resources:
      memory: 1 GiB

  - name: eth-viewer
    image: gcr.io/whiteblock/helpers/ethereum/viewer:latest
    script:
      inline: viewer --node $GETH_SERVICE0_COMMON_NETWORK:8545 --listen 0.0.0.0:16555
    resources:
      memory: 1 GiB

sidecars:
  - name: tx-generator
    sidecar-to:
      - geth
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    image: gcr.io/whiteblock/helpers/ethereum/tx:ef
    script:
      # recvAddrs${INDEX}.json will be comma separated addresses with 0x prefix
      inline: >
        cat /accounts/accounts.json 
        | jq --arg i "${INDEX}" 'del(.[$i | tonumber]) | map(.address) | join(",")' 
        > /accounts/recvAddrs${INDEX}.json;
        privkey=$(cat /accounts/accounts.json | jq --arg i "${INDEX}" '.[$i | tonumber].privateKey');
        tx --chain-id $_ETH_NETWORK_ID 
        --tps $_TPS
        --target $SERVICE:8545 
        --private-key ${privkey} 
        --gas-limit ${TX_GAS_LIMIT} 
        --tx-size $_TX_SIZE
        --gas-price ${TX_GAS_PRICE}
        --destination $(cat /accounts/recvAddrs${INDEX}.json)
        --concurrent-nonces $_CONCURRENT_NONCES
    environment:
      TX_GAS_PRICE: "500000"
      TX_GAS_LIMIT: "550000"
    resources:
      cpus: 2
      memory: 3 GB

task-runners:
  - name: generate-accounts
    image: "gcr.io/whiteblock/helpers/ethereum/accounts:master"
    script:
      inline: accounts generate -c $_ACCOUNTS_TO_CREATE -e -d /accounts
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    resources:
      memory: 2 GB

  - name: generate-genesis
    image: gcr.io/whiteblock/helpers/ethereum/genesis:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
#    environment:
    script:
      inline: genesis generate -a /accounts/accounts.json -o consensus=ethash -o gasLimit=$_GAS_LIMIT -o difficulty=55000000 | tee /accounts/genesis.json
    resources:
      memory: 2 GB
  - name: generate-static-peers
    image: gcr.io/whiteblock/helpers/ethereum/static-peers:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script: 
      inline: generate --accounts-file /accounts/accounts.json --network common-network --service geth | tee /accounts/static-nodes.json
 
  - name: generate-topology
    image: gcr.io/whiteblock/helpers/ethereum/topology:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: python generate.py /accounts/static-nodes.json /accounts/ $_ACCOUNTS_TO_CREATE $_BA_PARAMETER 54321 50

  - name: generate-keystore
    image: gcr.io/whiteblock/helpers/geth/keystore:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: >
        echo $_ACCOUNT_PASSWORD > /tmp/pw.txt;
        keystore -p /tmp/pw.txt -f /accounts/accounts.json -o /accounts/keystore/
    resources:
      cpus: 2
      memory: 2 GB

  - name: await-block-production
    image: gcr.io/whiteblock/helpers/ethereum/await-blocks:master
    script:
      inline: await --target $GETH_SERVICE0_COMMON_NETWORK:8545
    resources:
      memory: 1 GB

  - name: await-blocks-$_PHASE_ONE_BLOCKS
    image: gcr.io/whiteblock/helpers/ethereum/await-blocks:master
    script:
      inline: await --target $GETH_SERVICE0_COMMON_NETWORK:8545 --block $_PHASE_ONE_BLOCKS
    resources:
      memory: 1 GB

tests: 
  - name: geth_demo
    phases:
      - name: generating-accounts
        tasks: 
        - type: generate-accounts
      
      - name: creating-keystore-genesis-static-peers
        tasks:
          - type: generate-genesis
          - type: generate-keystore
          - type: generate-static-peers

      - name: setup-topology
        tasks:
          - type: generate-topology
      
      - name: starting-geth-nodes
        system:
          - type: geth
            count: 90 # <---------------------------------------------
            resources:
              networks:
                - name: common-network
                  bandwidth: 100 Mbit
#                  latency: 50 ms
      
      - name: awaiting-block-production
        tasks:
          - type: await-block-production
            timeout: 30m
            networks:
              - name: common-network

      - name: starting-stats-tools
        system:
        - type: record
          port-mappings:
            - "8080:8080"
          resources:
            networks:
              - name: common-network

      - name: start-custom-viewers
        duration: 120m #wait 120 minutes before checking for tx completion
        system:
        - type: tps-logger 
          port-mappings:
            - "17777:17777"
          resources:
            networks:
              - name: common-network
        - type: block-logger
          resources:
            networks:
              - name: common-network
        - type: eth-viewer
          port-mappings:
            - "16555:16555"
          resources:
            networks:
              - name: common-network
